name: Build and Create Multi-Platform Releases

on:
  push:
    branches:
      - main

env:
  GO_VERSION: ${{ vars.GO_VERSION }}

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            goos: linux
            ext: ''
            archive_ext: 'tar.gz'
            checksum_cmd: 'sha256sum'
          - os: macos-latest
            goos: darwin
            ext: ''
            archive_ext: 'tar.gz'
            checksum_cmd: 'shasum -a 256'
          - os: windows-latest
            goos: windows
            ext: '.exe'
            archive_ext: 'zip'
            checksum_cmd: 'CertUtil -hashfile'  # Windows command for checksums
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
        run: go build -o kubectl-lr${{ matrix.ext }} ./cmd/kubectl-limitrange

      - name: Create archive for release
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            zip kubectl-lr-${{ matrix.goos }}-amd64.zip kubectl-lr${{ matrix.ext }}
          else
            tar -czvf kubectl-lr-${{ matrix.goos }}-amd64.tar.gz kubectl-lr${{ matrix.ext }}
          fi

      - name: Generate checksum
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            powershell -Command "Get-FileHash kubectl-lr-${{ matrix.goos }}-amd64.zip -Algorithm SHA256 | Format-List" > kubectl-lr-${{ matrix.goos }}-amd64.zip.sha256
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            shasum -a 256 kubectl-lr-${{ matrix.goos }}-amd64.tar.gz > kubectl-lr-${{ matrix.goos }}-amd64.tar.gz.sha256
          else
            sha256sum kubectl-lr-${{ matrix.goos }}-amd64.tar.gz > kubectl-lr-${{ matrix.goos }}-amd64.tar.gz.sha256
          fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kubectl-lr-${{ matrix.goos }}-amd64
          path: |
            kubectl-lr-${{ matrix.goos }}-amd64.tar.gz
            kubectl-lr-${{ matrix.goos }}-amd64.zip
            kubectl-lr-${{ matrix.goos }}-amd64.tar.gz.sha256
            kubectl-lr-${{ matrix.goos }}-amd64.zip.sha256

  create-release:
    runs-on: ubuntu-latest
    needs: build-and-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Generate release notes with checksums
        run: |
          echo "## Checksums" > release_body.md
          echo "" >> release_body.md
          for file in artifacts/**/**/*.sha256; do
            echo "\`\`\`" >> release_body.md
            cat "$file" >> release_body.md
            echo "\`\`\`" >> release_body.md
            echo "" >> release_body.md
          done

      - name: Create and Upload Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*
          tag_name: "v1.0.0"
          name: Release ${{ github.ref_name }}
          body_path: release_body.md
          draft: true 
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
