name: Go CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version: [1.19, 1.20, 1.23]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true  # Enables caching of Go modules

      - name: Install dependencies
        run: go mod download

      - name: Build
        run: go build ./cmd/kubectl-limitrange

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: kubectl-limitrange-${{ matrix.os }}-go${{ matrix.go-version }}
          path: ./kubectl-limitrange

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ vars.GO_VERSION }}
          cache: true  # Enables caching of Go modules

      - name: Install dependencies
        run: go mod download

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.61
          args: --timeout=30m

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version: [1.19, 1.20]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test ./... -v

      - name: Check code formatting
        run: go fmt ./...
